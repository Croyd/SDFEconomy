# Translations for OmCommands library routines 
CommandHandler-no_permission = Insufficient permission
TranslatedCommand-help_line_command = \u00a7cCommand:\u00a7e {0}
TranslatedCommand-help_line_description = \u00a7cDescription:\u00a7e {0}
TranslatedCommand-help_line_usage = \u00a7cUsage:\u00a7e {0}
PlayerSpecificCommand-no_permission = Insufficient privileges to access another player's account
PlayerSpecificCommand-specify_player_name = Must specify player name when using this command from the console  
HelpCommand-description = Displays the help menu
HelpCommand-usage = /{0} help \u00a78[page#]
HelpCommand-banner = \u00a7c-----[\u00a7f {0} Help <{1,number,integer}/{2,number,integer}>\u00a7c ]-----
HelpCommand-help_line =   \u00a7a{0}
HelpCommand-for_more_help = \u00a7cFor more info on a particular command, type \u00a7f/{0} <command> ?

# PlayerAndLocationSpecificCommand class
# Also uses: PlayerSpecificCommand-no_permission, PlayerSpecificCommand-specify_player_name 
PlayerAndLocationSpecificCommand-cannot_find_location = Could not determine player location

# AccountCommon
# Messages used by multiple commands
AccountCommon-cannot_find_account = Could not find a player account for {0} @ {1}
AccountCommon-invalid_amount = Invalid amount specified: {0}
AccountCommon-not_admin = This command can only used by admins and ops
AccountCommon-invalid_location = Invalid location name: {0}
AccountCommon-new_balance = Balance for {0} @ {1} is now: {2}

# BankCommon
# Messages used by multiple commands
BankCommon-bank_not_found = No bank named {0} was found
BankCommon-not_owner = You are not the owner of the bank: {0}

# BalanceCommand class
BalanceCommand-description = Check player account balance
BalanceCommand-usage = /{0} \u00a78[player_name] [location]
BalanceCommand-balance_message = {0}''s balance @ {1} is: {2}

# BankAddMemberCommand class
BankAddMemberCommand-description = Add a member to a bank
BankAddMemberCommand-usage = /{0} \u00a78<account_name> <member_name>
BankAddMemberCommand-already_member = {0} is already a member of bank: {1}
BankAddMemberCommand-add_success = Successfully added {0} to bank: {1}
BankAddMemberCommand-add_failed = Failed adding {0} to bank: {1}

# BankCreateCommand class
BankCreateCommand-description = Creates a new bank account
BankCreateCommand-usage = /{0} \u00a78<account_name> [owner] [location]
BankCreateCommand-create_success = Successfully created bank: {0}
BankCreateCommand-create_failed = Failed to create bank: {0}

# BankDepositCommand class
BankDepositCommand-description = Deposit money to a bank from a player account
BankDepositCommand-usage = /{0} \u00a78<bank_account> <amount> [player_name] [location]
BankDepositCommand-location_mismatch = Cannot deposit into bank account {0} @ {1} from player at location {2}
BankDepositCommand-player_widthdraw_error = Could not withdraw from player account: {0} due to error: {1}
BankDepositCommand-bank_deposit_error = Could not deposit into bank account: {0} due to error: {1}
BankDepositCommand-bank_deposit_success = Successfully deposited {0} from {1} @ {2} into bank: {3}

# BankInfoCommand class
BankInfoCommand-description = Displays bank account balance and members
BankInfoCommand-usage = /{0} \u00a78<account_name>
BankInfoCommand-bank_info = \u00a7fBank Info:
BankInfoCommand-location_line = \u00a7cLocation: \u00a7e{0}
BankInfoCommand-balance_line = \u00a7cBalance: \u00a7e{0}
BankInfoCommand-owner_line = \u00a7cOwner: \u00a7e{0}
BankInfoCommand-members_line = \u00a7cMembers: \u00a7e{0}

# BankListCommand class
BankListCommand-description = List bank accounts
BankListCommand-usage = /{0} \u00a78[owner] [location]
BankListCommand-banner = \u00a7c-----[\u00a7f Bank Accounts \u00a7c]-----
BankListCommand-list_line_admin = {0} @ {1} : {2}, Owner: {3}
BankListCommand-list_line_normal = {0} : {1}

# BankRemoveCommand class
BankRemoveCommand-description = Removes a bank account
BankRemoveCommand-usage = /{0} \u00a78<account_name>
BankRemoveCommand-remove_success = Successfully removed bank: {0}
BankRemoveCommand-remove_failure = Failed to remove bank: {0}
BankRemoveCommand-deposit_success = Deposited bank balance of: {0} into player account for: {1}
BankRemoveCommand-deposit_failure = Failed to deposit bank balance of: {0} into player account for: {1}

# BankRemoveMemberCommand class
BankRemoveMemberCommand-description = Remove a member from a bank
BankRemoveMemberCommand-usage = /{0} \u00a78<account_name> <member_name>
BankRemoveMemberCommand-not_a_member = {0} is not a member of bank: {1}
BankRemoveMemberCommand-remove_success = Successfully removed {0} from bank: {1}
BankRemoveMemberCommand-remove_failure = Failed to remove {0} from bank: {1}

# BankRenameCommand class
BankRenameCommand-description = Renames a bank account
BankRenameCommand-usage = /{0}  \u00a78<old_account_name> <new_account_name>
BankRenameCommand-create_failed = Failed to create renamed bank account: {0} due to error: {1}
BankRenameCommand-remove_failed = Failed to remove old bank account: {0} due to error: {1}
BankRenameCommand-rename_success = Successfully renamed bank: {0} to: {1}

# BankSetOwnerCommand class
BankSetOwnerCommand-description = Set a new owner for the bank account
BankSetOwnerCommand-usage = /{0} \u00a78<account_name> <new_owner>
BankSetOwnerCommand-set_success = Successfully set {0} as owner of bank: {1}
BankSetOwnerCommand-set_failed = Failed to set {0} as owner of bank: {1}
BankSetOwnerCommand-member_removing = Removing {0} as member of bank: {1}
BankSetOwnerCommand-member_adding = Adding {0} as member of bank: {1}
        
# BankWithdrawCommand class
BankWithdrawCommand-description = Withdraw money from a bank into a player account
BankWithdrawCommand-usage = /{0} \u00a78<bank_account> <amount> [player_name] [location]
BankWithdrawCommand-location_mismatch = Cannot withdraw from bank account {0} @ {1} from player at location {2}

BankWithdrawCommand-bank_widthdraw_error = Could not withdraw from bank account: {0} due to error: {1}
BankWithdrawCommand-player_deposit_error = Could not deposit into player account: {0} due to error: {1}
BankWithdrawCommand-bank_withdraw_success = Successfully withdrew {0} from {1} @ {2} into player account: {3}

# ConvertCommand class
ConvertCommand-description = Convert from another Vault economy
ConvertCommand-usage = /{0} \u00a78<economy_name> <location1>=<scaling> [ <location2>=scaling ...]
ConvertCommand-scaling_not_specified = No scaling specified for {0} using 1.0
ConvertCommand-could_not_parse_argument = Could not parse argument #{0,number,integer} : {1}
ConvertCommand-specify_pairs = Specify location=scaling pairs where location is a name and scaling a double
ConvertCommand-use_numbers_for_scalings = Make sure that scalings are numbers
ConvertCommand-need_other_economy = You must have at least 1 other economy loaded to convert
ConvertCommand-considering_economy = Considering loaded economy for conversion: {0}
ConvertCommand-could_not_find_economy = Could not find {0} loaded on the server, check your spelling
ConvertCommand-conversion_starting = This may take some time to convert, expect server lag
ConvertCommand-converting_banks = Converting banks...
ConvertCommand-bank_exists = {0} already exists, skipping
ConvertCommand-bank_deposit_failure = Could not deposit into destination bank {0}, due to error: {1}
ConvertCommand-bank_created = Created new bank account: {0}
ConvertCommand-converting_player_accounts = Converting player accounts...
ConvertCommand-player_account_exists = {0} already has an account @ {1}, skipping
ConvertCommand-player_account_created = {0} @ {1} -> {2}
ConvertCommand-conversion_complete = Conversion complete, please verify the data before using it

# DepositAdminCommand class
DepositAdminCommand-description = Deposit money into a player account, admin only
DepositAdminCommand-usage = /{0} \u00a78<player_name> <amount> [location]
DepositAdminCommand-deposit_success = Successful deposit of {0} to {1} @ {2}
DepositAdminCommand-deposit_failure = Could not deposit {0} into account of {1} @ {2}, due to error: 

# ListLocationsCommand class
ListLocationsCommand-description = List all valid economy location names
ListLocationsCommand-usage = /{0}
ListLocationsCommand-banner = \u00a7c-----[\u00a7f Economy Location Names \u00a7c ]-----
ListLocationsCommand-location_line = {0} : {1}

# PayCommand class
PayCommand-description = Pay another player in your current location
PayCommand-usage = /{0} \u00a78<player_name> <amount>
PayCommand-payer_no_account = You do not have an account @ {0}
PayCommand-payee_no_account = {0} does not have an account @ {1}
PayCommand-not_enough_money = You do not have enough money to pay {0} to {1} @ {2}
PayCommand-deposit_failure = Could not deposit {0} into the account of {1} @ {2} crediting your account back
PayCommand-credit_failure = Could not credit back {0} to your account. Sorry :-(
PayCommand-payment_success = Payment of {0} to {1} succeeded, your balance @ {2} is now {3}
PayCommand-notify_payee = {0} has sent you {1} your balance @ {2} is now: {3}
PayCommand-must_be_player = Pay command must be used by a player

# PlayerCreateCommand class
PlayerCreateCommand-description = Creates a new player account, admin only
PlayerCreateCommand-usage = /{0} \u00a78<player_name> <location>
PlayerCreateCommand-create_success = Successfully created player account: {0} @ {1}
PlayerCreateCommand-create_failure = Failed to create player account: {0} @ {1}

# PlayerDeleteCommand class
PlayerDeleteCommand-description = Deletes a player account, admin only
PlayerDeleteCommand-usage = /{0} \u00a78<player_name> <location>
PlayerDeleteCommand-delete_success = Successfully deleted player account: {0} @ {1}
PlayerDeleteCommand-delete_failure = Failed to delete player account: {0} @ {1}

# ReloadCommand class
ReloadCommand-description = Reload account data from storage, admin only
ReloadCommand-usage = /{0}
ReloadCommand-reload_success = Account data reloaded from storage
# Currently not used
ReloadCommand-reload_failure = Failed to reload account data from storage

# ScaleCommand class
ScaleCommand-description = Scale the balance of all player accounts in a location, admin only
ScaleCommand-usage = /{0} \u00a78<amount> <location>
ScaleCommand-incorrect_scaling = Scaling amount: {0} could not be converted to a number
ScaleCommand-scaling_starting = Scaling {0,number,integer} players @ {1} by: {2,number,#.##}
ScaleCommand-scaling_finished = Done scaling

# SetCommand class
SetCommand-description = Set the balance for a player, admin only
SetCommand-usage = /{0} \u00a78<player_name> <amount> [location]

# TopAccountsCommand class
TopAccountsCommand-description = List top account holders for location
TopAccountsCommand-usage = /{0} \u00a78[location]
TopAccountsCommand-specify_location = Must specify location name when using this command from the console
TopAccountsCommand-banner = \u00a7c-----[\u00a7f Top {0,number,integer} Richest Players @ {1} \u00a7c ]-----
TopAccountsCommand-line_with_balance = {0} : {1}
TopAccountsCommand-line_no_balance = {0}

# WithdrawAdminCommand class
WithdrawAdminCommand-description = Withdraw money from a player account, admin only
WithdrawAdminCommand-usage = /{0} \u00a78<player_name> <amount> [location]
WithdrawAdminCommand-withdraw_success = Successful withdraw of {0} from {1} @ {2}
WithdrawAdminCommand-withdraw_failure = {0} @ {1} does not have enough money to withdraw {2}
